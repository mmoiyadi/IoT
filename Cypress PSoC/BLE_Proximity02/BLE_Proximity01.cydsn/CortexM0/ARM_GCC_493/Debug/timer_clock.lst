ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"timer_clock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.timer_clock_StartEx,"ax",%progbits
  18              		.align	2
  19              		.global	timer_clock_StartEx
  20              		.code	16
  21              		.thumb_func
  22              		.type	timer_clock_StartEx, %function
  23              	timer_clock_StartEx:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\timer_clock.c"
   1:.\Generated_Source\PSoC4/timer_clock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/timer_clock.c **** * File Name: timer_clock.c
   3:.\Generated_Source\PSoC4/timer_clock.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/timer_clock.c **** *
   5:.\Generated_Source\PSoC4/timer_clock.c **** *  Description:
   6:.\Generated_Source\PSoC4/timer_clock.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:.\Generated_Source\PSoC4/timer_clock.c **** *
   8:.\Generated_Source\PSoC4/timer_clock.c **** *  Note:
   9:.\Generated_Source\PSoC4/timer_clock.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/timer_clock.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/timer_clock.c **** *
  12:.\Generated_Source\PSoC4/timer_clock.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/timer_clock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/timer_clock.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/timer_clock.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/timer_clock.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/timer_clock.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/timer_clock.c **** 
  19:.\Generated_Source\PSoC4/timer_clock.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC4/timer_clock.c **** #include "timer_clock.h"
  21:.\Generated_Source\PSoC4/timer_clock.c **** 
  22:.\Generated_Source\PSoC4/timer_clock.c **** #if defined CYREG_PERI_DIV_CMD
  23:.\Generated_Source\PSoC4/timer_clock.c **** 
  24:.\Generated_Source\PSoC4/timer_clock.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/timer_clock.c **** * Function Name: timer_clock_StartEx
  26:.\Generated_Source\PSoC4/timer_clock.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/timer_clock.c **** *
  28:.\Generated_Source\PSoC4/timer_clock.c **** * Summary:
  29:.\Generated_Source\PSoC4/timer_clock.c **** *  Starts the clock, aligned to the specified running clock.
  30:.\Generated_Source\PSoC4/timer_clock.c **** *
  31:.\Generated_Source\PSoC4/timer_clock.c **** * Parameters:
  32:.\Generated_Source\PSoC4/timer_clock.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 2


  33:.\Generated_Source\PSoC4/timer_clock.c **** *    clock is started.
  34:.\Generated_Source\PSoC4/timer_clock.c **** *
  35:.\Generated_Source\PSoC4/timer_clock.c **** * Returns:
  36:.\Generated_Source\PSoC4/timer_clock.c **** *  None
  37:.\Generated_Source\PSoC4/timer_clock.c **** *
  38:.\Generated_Source\PSoC4/timer_clock.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/timer_clock.c **** void timer_clock_StartEx(uint32 alignClkDiv)
  40:.\Generated_Source\PSoC4/timer_clock.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 7860     		str	r0, [r7, #4]
  41:.\Generated_Source\PSoC4/timer_clock.c ****     /* Make sure any previous start command has finished. */
  42:.\Generated_Source\PSoC4/timer_clock.c ****     while((timer_clock_CMD_REG & timer_clock_CMD_ENABLE_MASK) != 0u)
  37              		.loc 1 42 0
  38 0008 C046     		mov	r8, r8
  39              	.L2:
  40              		.loc 1 42 0 is_stmt 0 discriminator 1
  41 000a 064B     		ldr	r3, .L3
  42 000c 1B68     		ldr	r3, [r3]
  43 000e 002B     		cmp	r3, #0
  44 0010 FBDB     		blt	.L2
  43:.\Generated_Source\PSoC4/timer_clock.c ****     {
  44:.\Generated_Source\PSoC4/timer_clock.c ****     }
  45:.\Generated_Source\PSoC4/timer_clock.c ****     
  46:.\Generated_Source\PSoC4/timer_clock.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:.\Generated_Source\PSoC4/timer_clock.c ****     timer_clock_CMD_REG =
  45              		.loc 1 47 0 is_stmt 1
  46 0012 044B     		ldr	r3, .L3
  48:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)timer_clock__DIV_ID << timer_clock_CMD_DIV_SHIFT)|
  49:.\Generated_Source\PSoC4/timer_clock.c ****         (alignClkDiv << timer_clock_CMD_PA_DIV_SHIFT) |
  47              		.loc 1 49 0
  48 0014 7A68     		ldr	r2, [r7, #4]
  49 0016 1202     		lsl	r2, r2, #8
  50 0018 0349     		ldr	r1, .L3+4
  51 001a 0A43     		orr	r2, r1
  47:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)timer_clock__DIV_ID << timer_clock_CMD_DIV_SHIFT)|
  52              		.loc 1 47 0
  53 001c 1A60     		str	r2, [r3]
  50:.\Generated_Source\PSoC4/timer_clock.c ****         (uint32)timer_clock_CMD_ENABLE_MASK;
  51:.\Generated_Source\PSoC4/timer_clock.c **** }
  54              		.loc 1 51 0
  55 001e BD46     		mov	sp, r7
  56 0020 02B0     		add	sp, sp, #8
  57              		@ sp needed
  58 0022 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 0024 00000140 		.word	1073807360
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 3


  63 0028 40000080 		.word	-2147483584
  64              		.cfi_endproc
  65              	.LFE0:
  66              		.size	timer_clock_StartEx, .-timer_clock_StartEx
  67              		.section	.text.timer_clock_Stop,"ax",%progbits
  68              		.align	2
  69              		.global	timer_clock_Stop
  70              		.code	16
  71              		.thumb_func
  72              		.type	timer_clock_Stop, %function
  73              	timer_clock_Stop:
  74              	.LFB1:
  52:.\Generated_Source\PSoC4/timer_clock.c **** 
  53:.\Generated_Source\PSoC4/timer_clock.c **** #else
  54:.\Generated_Source\PSoC4/timer_clock.c **** 
  55:.\Generated_Source\PSoC4/timer_clock.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC4/timer_clock.c **** * Function Name: timer_clock_Start
  57:.\Generated_Source\PSoC4/timer_clock.c **** ********************************************************************************
  58:.\Generated_Source\PSoC4/timer_clock.c **** *
  59:.\Generated_Source\PSoC4/timer_clock.c **** * Summary:
  60:.\Generated_Source\PSoC4/timer_clock.c **** *  Starts the clock.
  61:.\Generated_Source\PSoC4/timer_clock.c **** *
  62:.\Generated_Source\PSoC4/timer_clock.c **** * Parameters:
  63:.\Generated_Source\PSoC4/timer_clock.c **** *  None
  64:.\Generated_Source\PSoC4/timer_clock.c **** *
  65:.\Generated_Source\PSoC4/timer_clock.c **** * Returns:
  66:.\Generated_Source\PSoC4/timer_clock.c **** *  None
  67:.\Generated_Source\PSoC4/timer_clock.c **** *
  68:.\Generated_Source\PSoC4/timer_clock.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC4/timer_clock.c **** 
  70:.\Generated_Source\PSoC4/timer_clock.c **** void timer_clock_Start(void)
  71:.\Generated_Source\PSoC4/timer_clock.c **** {
  72:.\Generated_Source\PSoC4/timer_clock.c ****     /* Set the bit to enable the clock. */
  73:.\Generated_Source\PSoC4/timer_clock.c ****     timer_clock_ENABLE_REG |= timer_clock__ENABLE_MASK;
  74:.\Generated_Source\PSoC4/timer_clock.c **** }
  75:.\Generated_Source\PSoC4/timer_clock.c **** 
  76:.\Generated_Source\PSoC4/timer_clock.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:.\Generated_Source\PSoC4/timer_clock.c **** 
  78:.\Generated_Source\PSoC4/timer_clock.c **** 
  79:.\Generated_Source\PSoC4/timer_clock.c **** /*******************************************************************************
  80:.\Generated_Source\PSoC4/timer_clock.c **** * Function Name: timer_clock_Stop
  81:.\Generated_Source\PSoC4/timer_clock.c **** ********************************************************************************
  82:.\Generated_Source\PSoC4/timer_clock.c **** *
  83:.\Generated_Source\PSoC4/timer_clock.c **** * Summary:
  84:.\Generated_Source\PSoC4/timer_clock.c **** *  Stops the clock and returns immediately. This API does not require the
  85:.\Generated_Source\PSoC4/timer_clock.c **** *  source clock to be running but may return before the hardware is actually
  86:.\Generated_Source\PSoC4/timer_clock.c **** *  disabled.
  87:.\Generated_Source\PSoC4/timer_clock.c **** *
  88:.\Generated_Source\PSoC4/timer_clock.c **** * Parameters:
  89:.\Generated_Source\PSoC4/timer_clock.c **** *  None
  90:.\Generated_Source\PSoC4/timer_clock.c **** *
  91:.\Generated_Source\PSoC4/timer_clock.c **** * Returns:
  92:.\Generated_Source\PSoC4/timer_clock.c **** *  None
  93:.\Generated_Source\PSoC4/timer_clock.c **** *
  94:.\Generated_Source\PSoC4/timer_clock.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/timer_clock.c **** void timer_clock_Stop(void)
  96:.\Generated_Source\PSoC4/timer_clock.c **** {
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 4


  75              		.loc 1 96 0
  76              		.cfi_startproc
  77 0000 80B5     		push	{r7, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  97:.\Generated_Source\PSoC4/timer_clock.c **** #if defined CYREG_PERI_DIV_CMD
  98:.\Generated_Source\PSoC4/timer_clock.c **** 
  99:.\Generated_Source\PSoC4/timer_clock.c ****     /* Make sure any previous start command has finished. */
 100:.\Generated_Source\PSoC4/timer_clock.c ****     while((timer_clock_CMD_REG & timer_clock_CMD_ENABLE_MASK) != 0u)
  83              		.loc 1 100 0
  84 0004 C046     		mov	r8, r8
  85              	.L6:
  86              		.loc 1 100 0 is_stmt 0 discriminator 1
  87 0006 044B     		ldr	r3, .L7
  88 0008 1B68     		ldr	r3, [r3]
  89 000a 002B     		cmp	r3, #0
  90 000c FBDB     		blt	.L6
 101:.\Generated_Source\PSoC4/timer_clock.c ****     {
 102:.\Generated_Source\PSoC4/timer_clock.c ****     }
 103:.\Generated_Source\PSoC4/timer_clock.c ****     
 104:.\Generated_Source\PSoC4/timer_clock.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:.\Generated_Source\PSoC4/timer_clock.c ****     timer_clock_CMD_REG =
  91              		.loc 1 105 0 is_stmt 1
  92 000e 024B     		ldr	r3, .L7
  93 0010 024A     		ldr	r2, .L7+4
  94 0012 1A60     		str	r2, [r3]
 106:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)timer_clock__DIV_ID << timer_clock_CMD_DIV_SHIFT)|
 107:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)timer_clock_CMD_DISABLE_MASK);
 108:.\Generated_Source\PSoC4/timer_clock.c **** 
 109:.\Generated_Source\PSoC4/timer_clock.c **** #else
 110:.\Generated_Source\PSoC4/timer_clock.c **** 
 111:.\Generated_Source\PSoC4/timer_clock.c ****     /* Clear the bit to disable the clock. */
 112:.\Generated_Source\PSoC4/timer_clock.c ****     timer_clock_ENABLE_REG &= (uint32)(~timer_clock__ENABLE_MASK);
 113:.\Generated_Source\PSoC4/timer_clock.c ****     
 114:.\Generated_Source\PSoC4/timer_clock.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:.\Generated_Source\PSoC4/timer_clock.c **** }
  95              		.loc 1 115 0
  96 0014 BD46     		mov	sp, r7
  97              		@ sp needed
  98 0016 80BD     		pop	{r7, pc}
  99              	.L8:
 100              		.align	2
 101              	.L7:
 102 0018 00000140 		.word	1073807360
 103 001c 40000040 		.word	1073741888
 104              		.cfi_endproc
 105              	.LFE1:
 106              		.size	timer_clock_Stop, .-timer_clock_Stop
 107              		.section	.text.timer_clock_SetFractionalDividerRegister,"ax",%progbits
 108              		.align	2
 109              		.global	timer_clock_SetFractionalDividerRegister
 110              		.code	16
 111              		.thumb_func
 112              		.type	timer_clock_SetFractionalDividerRegister, %function
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 5


 113              	timer_clock_SetFractionalDividerRegister:
 114              	.LFB2:
 116:.\Generated_Source\PSoC4/timer_clock.c **** 
 117:.\Generated_Source\PSoC4/timer_clock.c **** 
 118:.\Generated_Source\PSoC4/timer_clock.c **** /*******************************************************************************
 119:.\Generated_Source\PSoC4/timer_clock.c **** * Function Name: timer_clock_SetFractionalDividerRegister
 120:.\Generated_Source\PSoC4/timer_clock.c **** ********************************************************************************
 121:.\Generated_Source\PSoC4/timer_clock.c **** *
 122:.\Generated_Source\PSoC4/timer_clock.c **** * Summary:
 123:.\Generated_Source\PSoC4/timer_clock.c **** *  Modifies the clock divider and the fractional divider.
 124:.\Generated_Source\PSoC4/timer_clock.c **** *
 125:.\Generated_Source\PSoC4/timer_clock.c **** * Parameters:
 126:.\Generated_Source\PSoC4/timer_clock.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:.\Generated_Source\PSoC4/timer_clock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:.\Generated_Source\PSoC4/timer_clock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:.\Generated_Source\PSoC4/timer_clock.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:.\Generated_Source\PSoC4/timer_clock.c **** * Returns:
 131:.\Generated_Source\PSoC4/timer_clock.c **** *  None
 132:.\Generated_Source\PSoC4/timer_clock.c **** *
 133:.\Generated_Source\PSoC4/timer_clock.c **** *******************************************************************************/
 134:.\Generated_Source\PSoC4/timer_clock.c **** void timer_clock_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:.\Generated_Source\PSoC4/timer_clock.c **** {
 115              		.loc 1 135 0
 116              		.cfi_startproc
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 84B0     		sub	sp, sp, #16
 122              		.cfi_def_cfa_offset 24
 123 0004 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 0006 021C     		mov	r2, r0
 126 0008 BB1D     		add	r3, r7, #6
 127 000a 1A80     		strh	r2, [r3]
 128 000c 7B1D     		add	r3, r7, #5
 129 000e 0A1C     		add	r2, r1, #0
 130 0010 1A70     		strb	r2, [r3]
 136:.\Generated_Source\PSoC4/timer_clock.c ****     uint32 maskVal;
 137:.\Generated_Source\PSoC4/timer_clock.c ****     uint32 regVal;
 138:.\Generated_Source\PSoC4/timer_clock.c ****     
 139:.\Generated_Source\PSoC4/timer_clock.c **** #if defined (timer_clock__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:.\Generated_Source\PSoC4/timer_clock.c ****     
 141:.\Generated_Source\PSoC4/timer_clock.c **** 	/* get all but divider bits */
 142:.\Generated_Source\PSoC4/timer_clock.c ****     maskVal = timer_clock_DIV_REG & 
 131              		.loc 1 142 0
 132 0012 0B4B     		ldr	r3, .L10
 133 0014 1B68     		ldr	r3, [r3]
 134 0016 0722     		mov	r2, #7
 135 0018 1340     		and	r3, r2
 136 001a FB60     		str	r3, [r7, #12]
 143:.\Generated_Source\PSoC4/timer_clock.c ****                     (uint32)(~(uint32)(timer_clock_DIV_INT_MASK | timer_clock_DIV_FRAC_MASK)); 
 144:.\Generated_Source\PSoC4/timer_clock.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:.\Generated_Source\PSoC4/timer_clock.c ****     regVal = maskVal |
 146:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)((uint32)clkDivider <<  timer_clock_DIV_INT_SHIFT) & timer_clock_DIV_INT_MASK) |
 137              		.loc 1 146 0
 138 001c BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 6


 139 001e 1B88     		ldrh	r3, [r3]
 140 0020 1A02     		lsl	r2, r3, #8
 145:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)((uint32)clkDivider <<  timer_clock_DIV_INT_SHIFT) & timer_clock_DIV_INT_MASK) |
 141              		.loc 1 145 0
 142 0022 FB68     		ldr	r3, [r7, #12]
 143 0024 1A43     		orr	r2, r3
 147:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)((uint32)clkFractional << timer_clock_DIV_FRAC_SHIFT) & timer_clock_DIV_FRAC_MASK)
 144              		.loc 1 147 0
 145 0026 7B1D     		add	r3, r7, #5
 146 0028 1B78     		ldrb	r3, [r3]
 147 002a DB00     		lsl	r3, r3, #3
 148 002c FF21     		mov	r1, #255
 149 002e 0B40     		and	r3, r1
 145:.\Generated_Source\PSoC4/timer_clock.c ****         ((uint32)((uint32)clkDivider <<  timer_clock_DIV_INT_SHIFT) & timer_clock_DIV_INT_MASK) |
 150              		.loc 1 145 0
 151 0030 1343     		orr	r3, r2
 152 0032 BB60     		str	r3, [r7, #8]
 148:.\Generated_Source\PSoC4/timer_clock.c ****     
 149:.\Generated_Source\PSoC4/timer_clock.c **** #else
 150:.\Generated_Source\PSoC4/timer_clock.c ****     /* get all but integer divider bits */
 151:.\Generated_Source\PSoC4/timer_clock.c ****     maskVal = timer_clock_DIV_REG & (uint32)(~(uint32)timer_clock__DIVIDER_MASK);
 152:.\Generated_Source\PSoC4/timer_clock.c ****     /* combine mask and new divider val into 32-bit value */
 153:.\Generated_Source\PSoC4/timer_clock.c ****     regVal = clkDivider | maskVal;
 154:.\Generated_Source\PSoC4/timer_clock.c ****     
 155:.\Generated_Source\PSoC4/timer_clock.c **** #endif /* timer_clock__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:.\Generated_Source\PSoC4/timer_clock.c **** 
 157:.\Generated_Source\PSoC4/timer_clock.c ****     timer_clock_DIV_REG = regVal;
 153              		.loc 1 157 0
 154 0034 024B     		ldr	r3, .L10
 155 0036 BA68     		ldr	r2, [r7, #8]
 156 0038 1A60     		str	r2, [r3]
 158:.\Generated_Source\PSoC4/timer_clock.c **** }
 157              		.loc 1 158 0
 158 003a BD46     		mov	sp, r7
 159 003c 04B0     		add	sp, sp, #16
 160              		@ sp needed
 161 003e 80BD     		pop	{r7, pc}
 162              	.L11:
 163              		.align	2
 164              	.L10:
 165 0040 00030140 		.word	1073808128
 166              		.cfi_endproc
 167              	.LFE2:
 168              		.size	timer_clock_SetFractionalDividerRegister, .-timer_clock_SetFractionalDividerRegister
 169              		.section	.text.timer_clock_GetDividerRegister,"ax",%progbits
 170              		.align	2
 171              		.global	timer_clock_GetDividerRegister
 172              		.code	16
 173              		.thumb_func
 174              		.type	timer_clock_GetDividerRegister, %function
 175              	timer_clock_GetDividerRegister:
 176              	.LFB3:
 159:.\Generated_Source\PSoC4/timer_clock.c **** 
 160:.\Generated_Source\PSoC4/timer_clock.c **** 
 161:.\Generated_Source\PSoC4/timer_clock.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/timer_clock.c **** * Function Name: timer_clock_GetDividerRegister
 163:.\Generated_Source\PSoC4/timer_clock.c **** ********************************************************************************
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 7


 164:.\Generated_Source\PSoC4/timer_clock.c **** *
 165:.\Generated_Source\PSoC4/timer_clock.c **** * Summary:
 166:.\Generated_Source\PSoC4/timer_clock.c **** *  Gets the clock divider register value.
 167:.\Generated_Source\PSoC4/timer_clock.c **** *
 168:.\Generated_Source\PSoC4/timer_clock.c **** * Parameters:
 169:.\Generated_Source\PSoC4/timer_clock.c **** *  None
 170:.\Generated_Source\PSoC4/timer_clock.c **** *
 171:.\Generated_Source\PSoC4/timer_clock.c **** * Returns:
 172:.\Generated_Source\PSoC4/timer_clock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:.\Generated_Source\PSoC4/timer_clock.c **** *  divide by 2, the return value will be 1.
 174:.\Generated_Source\PSoC4/timer_clock.c **** *
 175:.\Generated_Source\PSoC4/timer_clock.c **** *******************************************************************************/
 176:.\Generated_Source\PSoC4/timer_clock.c **** uint16 timer_clock_GetDividerRegister(void)
 177:.\Generated_Source\PSoC4/timer_clock.c **** {
 177              		.loc 1 177 0
 178              		.cfi_startproc
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 178:.\Generated_Source\PSoC4/timer_clock.c ****     return (uint16)((timer_clock_DIV_REG & timer_clock_DIV_INT_MASK)
 185              		.loc 1 178 0
 186 0004 034B     		ldr	r3, .L14
 187 0006 1B68     		ldr	r3, [r3]
 179:.\Generated_Source\PSoC4/timer_clock.c ****         >> timer_clock_DIV_INT_SHIFT);
 188              		.loc 1 179 0
 189 0008 1B0A     		lsr	r3, r3, #8
 178:.\Generated_Source\PSoC4/timer_clock.c ****     return (uint16)((timer_clock_DIV_REG & timer_clock_DIV_INT_MASK)
 190              		.loc 1 178 0
 191 000a 9BB2     		uxth	r3, r3
 180:.\Generated_Source\PSoC4/timer_clock.c **** }
 192              		.loc 1 180 0
 193 000c 181C     		mov	r0, r3
 194 000e BD46     		mov	sp, r7
 195              		@ sp needed
 196 0010 80BD     		pop	{r7, pc}
 197              	.L15:
 198 0012 C046     		.align	2
 199              	.L14:
 200 0014 00030140 		.word	1073808128
 201              		.cfi_endproc
 202              	.LFE3:
 203              		.size	timer_clock_GetDividerRegister, .-timer_clock_GetDividerRegister
 204              		.section	.text.timer_clock_GetFractionalDividerRegister,"ax",%progbits
 205              		.align	2
 206              		.global	timer_clock_GetFractionalDividerRegister
 207              		.code	16
 208              		.thumb_func
 209              		.type	timer_clock_GetFractionalDividerRegister, %function
 210              	timer_clock_GetFractionalDividerRegister:
 211              	.LFB4:
 181:.\Generated_Source\PSoC4/timer_clock.c **** 
 182:.\Generated_Source\PSoC4/timer_clock.c **** 
 183:.\Generated_Source\PSoC4/timer_clock.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC4/timer_clock.c **** * Function Name: timer_clock_GetFractionalDividerRegister
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 8


 185:.\Generated_Source\PSoC4/timer_clock.c **** ********************************************************************************
 186:.\Generated_Source\PSoC4/timer_clock.c **** *
 187:.\Generated_Source\PSoC4/timer_clock.c **** * Summary:
 188:.\Generated_Source\PSoC4/timer_clock.c **** *  Gets the clock fractional divider register value.
 189:.\Generated_Source\PSoC4/timer_clock.c **** *
 190:.\Generated_Source\PSoC4/timer_clock.c **** * Parameters:
 191:.\Generated_Source\PSoC4/timer_clock.c **** *  None
 192:.\Generated_Source\PSoC4/timer_clock.c **** *
 193:.\Generated_Source\PSoC4/timer_clock.c **** * Returns:
 194:.\Generated_Source\PSoC4/timer_clock.c **** *  Fractional Divide value of the clock
 195:.\Generated_Source\PSoC4/timer_clock.c **** *  0 if the fractional divider is not in use.
 196:.\Generated_Source\PSoC4/timer_clock.c **** *
 197:.\Generated_Source\PSoC4/timer_clock.c **** *******************************************************************************/
 198:.\Generated_Source\PSoC4/timer_clock.c **** uint8 timer_clock_GetFractionalDividerRegister(void)
 199:.\Generated_Source\PSoC4/timer_clock.c **** {
 212              		.loc 1 199 0
 213              		.cfi_startproc
 214 0000 80B5     		push	{r7, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 200:.\Generated_Source\PSoC4/timer_clock.c **** #if defined (timer_clock__FRAC_MASK)
 201:.\Generated_Source\PSoC4/timer_clock.c ****     /* return fractional divider bits */
 202:.\Generated_Source\PSoC4/timer_clock.c ****     return (uint8)((timer_clock_DIV_REG & timer_clock_DIV_FRAC_MASK)
 203:.\Generated_Source\PSoC4/timer_clock.c ****         >> timer_clock_DIV_FRAC_SHIFT);
 204:.\Generated_Source\PSoC4/timer_clock.c **** #else
 205:.\Generated_Source\PSoC4/timer_clock.c ****     return 0u;
 220              		.loc 1 205 0
 221 0004 0023     		mov	r3, #0
 206:.\Generated_Source\PSoC4/timer_clock.c **** #endif /* timer_clock__FRAC_MASK */
 207:.\Generated_Source\PSoC4/timer_clock.c **** }
 222              		.loc 1 207 0
 223 0006 181C     		mov	r0, r3
 224 0008 BD46     		mov	sp, r7
 225              		@ sp needed
 226 000a 80BD     		pop	{r7, pc}
 227              		.cfi_endproc
 228              	.LFE4:
 229              		.size	timer_clock_GetFractionalDividerRegister, .-timer_clock_GetFractionalDividerRegister
 230              		.text
 231              	.Letext0:
 232              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 233              		.section	.debug_info,"",%progbits
 234              	.Ldebug_info0:
 235 0000 5F010000 		.4byte	0x15f
 236 0004 0400     		.2byte	0x4
 237 0006 00000000 		.4byte	.Ldebug_abbrev0
 238 000a 04       		.byte	0x4
 239 000b 01       		.uleb128 0x1
 240 000c C7000000 		.4byte	.LASF25
 241 0010 01       		.byte	0x1
 242 0011 A9010000 		.4byte	.LASF26
 243 0015 12020000 		.4byte	.LASF27
 244 0019 00000000 		.4byte	.Ldebug_ranges0+0
 245 001d 00000000 		.4byte	0
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 9


 246 0021 00000000 		.4byte	.Ldebug_line0
 247 0025 02       		.uleb128 0x2
 248 0026 01       		.byte	0x1
 249 0027 06       		.byte	0x6
 250 0028 5C020000 		.4byte	.LASF0
 251 002c 02       		.uleb128 0x2
 252 002d 01       		.byte	0x1
 253 002e 08       		.byte	0x8
 254 002f 5B000000 		.4byte	.LASF1
 255 0033 02       		.uleb128 0x2
 256 0034 02       		.byte	0x2
 257 0035 05       		.byte	0x5
 258 0036 F9010000 		.4byte	.LASF2
 259 003a 02       		.uleb128 0x2
 260 003b 02       		.byte	0x2
 261 003c 07       		.byte	0x7
 262 003d 81000000 		.4byte	.LASF3
 263 0041 02       		.uleb128 0x2
 264 0042 04       		.byte	0x4
 265 0043 05       		.byte	0x5
 266 0044 09020000 		.4byte	.LASF4
 267 0048 02       		.uleb128 0x2
 268 0049 04       		.byte	0x4
 269 004a 07       		.byte	0x7
 270 004b 6F000000 		.4byte	.LASF5
 271 004f 02       		.uleb128 0x2
 272 0050 08       		.byte	0x8
 273 0051 05       		.byte	0x5
 274 0052 87010000 		.4byte	.LASF6
 275 0056 02       		.uleb128 0x2
 276 0057 08       		.byte	0x8
 277 0058 07       		.byte	0x7
 278 0059 70010000 		.4byte	.LASF7
 279 005d 03       		.uleb128 0x3
 280 005e 04       		.byte	0x4
 281 005f 05       		.byte	0x5
 282 0060 696E7400 		.ascii	"int\000"
 283 0064 02       		.uleb128 0x2
 284 0065 04       		.byte	0x4
 285 0066 07       		.byte	0x7
 286 0067 63010000 		.4byte	.LASF8
 287 006b 04       		.uleb128 0x4
 288 006c 03020000 		.4byte	.LASF9
 289 0070 02       		.byte	0x2
 290 0071 3801     		.2byte	0x138
 291 0073 2C000000 		.4byte	0x2c
 292 0077 04       		.uleb128 0x4
 293 0078 55010000 		.4byte	.LASF10
 294 007c 02       		.byte	0x2
 295 007d 3901     		.2byte	0x139
 296 007f 3A000000 		.4byte	0x3a
 297 0083 04       		.uleb128 0x4
 298 0084 5C010000 		.4byte	.LASF11
 299 0088 02       		.byte	0x2
 300 0089 3A01     		.2byte	0x13a
 301 008b 48000000 		.4byte	0x48
 302 008f 02       		.uleb128 0x2
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 10


 303 0090 04       		.byte	0x4
 304 0091 04       		.byte	0x4
 305 0092 2C000000 		.4byte	.LASF12
 306 0096 02       		.uleb128 0x2
 307 0097 08       		.byte	0x8
 308 0098 04       		.byte	0x4
 309 0099 9F000000 		.4byte	.LASF13
 310 009d 02       		.uleb128 0x2
 311 009e 01       		.byte	0x1
 312 009f 08       		.byte	0x8
 313 00a0 00000000 		.4byte	.LASF14
 314 00a4 04       		.uleb128 0x4
 315 00a5 69000000 		.4byte	.LASF15
 316 00a9 02       		.byte	0x2
 317 00aa E401     		.2byte	0x1e4
 318 00ac B0000000 		.4byte	0xb0
 319 00b0 05       		.uleb128 0x5
 320 00b1 83000000 		.4byte	0x83
 321 00b5 06       		.uleb128 0x6
 322 00b6 95010000 		.4byte	.LASF16
 323 00ba 01       		.byte	0x1
 324 00bb 27       		.byte	0x27
 325 00bc 00000000 		.4byte	.LFB0
 326 00c0 2C000000 		.4byte	.LFE0-.LFB0
 327 00c4 01       		.uleb128 0x1
 328 00c5 9C       		.byte	0x9c
 329 00c6 D9000000 		.4byte	0xd9
 330 00ca 07       		.uleb128 0x7
 331 00cb AD000000 		.4byte	.LASF18
 332 00cf 01       		.byte	0x1
 333 00d0 27       		.byte	0x27
 334 00d1 83000000 		.4byte	0x83
 335 00d5 02       		.uleb128 0x2
 336 00d6 91       		.byte	0x91
 337 00d7 74       		.sleb128 -12
 338 00d8 00       		.byte	0
 339 00d9 08       		.uleb128 0x8
 340 00da 68020000 		.4byte	.LASF28
 341 00de 01       		.byte	0x1
 342 00df 5F       		.byte	0x5f
 343 00e0 00000000 		.4byte	.LFB1
 344 00e4 20000000 		.4byte	.LFE1-.LFB1
 345 00e8 01       		.uleb128 0x1
 346 00e9 9C       		.byte	0x9c
 347 00ea 06       		.uleb128 0x6
 348 00eb 32000000 		.4byte	.LASF17
 349 00ef 01       		.byte	0x1
 350 00f0 86       		.byte	0x86
 351 00f1 00000000 		.4byte	.LFB2
 352 00f5 44000000 		.4byte	.LFE2-.LFB2
 353 00f9 01       		.uleb128 0x1
 354 00fa 9C       		.byte	0x9c
 355 00fb 38010000 		.4byte	0x138
 356 00ff 07       		.uleb128 0x7
 357 0100 94000000 		.4byte	.LASF19
 358 0104 01       		.byte	0x1
 359 0105 86       		.byte	0x86
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 11


 360 0106 77000000 		.4byte	0x77
 361 010a 02       		.uleb128 0x2
 362 010b 91       		.byte	0x91
 363 010c 6E       		.sleb128 -18
 364 010d 07       		.uleb128 0x7
 365 010e B9000000 		.4byte	.LASF20
 366 0112 01       		.byte	0x1
 367 0113 86       		.byte	0x86
 368 0114 6B000000 		.4byte	0x6b
 369 0118 02       		.uleb128 0x2
 370 0119 91       		.byte	0x91
 371 011a 6D       		.sleb128 -19
 372 011b 09       		.uleb128 0x9
 373 011c 05000000 		.4byte	.LASF21
 374 0120 01       		.byte	0x1
 375 0121 88       		.byte	0x88
 376 0122 83000000 		.4byte	0x83
 377 0126 02       		.uleb128 0x2
 378 0127 91       		.byte	0x91
 379 0128 74       		.sleb128 -12
 380 0129 09       		.uleb128 0x9
 381 012a A6000000 		.4byte	.LASF22
 382 012e 01       		.byte	0x1
 383 012f 89       		.byte	0x89
 384 0130 83000000 		.4byte	0x83
 385 0134 02       		.uleb128 0x2
 386 0135 91       		.byte	0x91
 387 0136 70       		.sleb128 -16
 388 0137 00       		.byte	0
 389 0138 0A       		.uleb128 0xa
 390 0139 0D000000 		.4byte	.LASF23
 391 013d 01       		.byte	0x1
 392 013e B0       		.byte	0xb0
 393 013f 77000000 		.4byte	0x77
 394 0143 00000000 		.4byte	.LFB3
 395 0147 18000000 		.4byte	.LFE3-.LFB3
 396 014b 01       		.uleb128 0x1
 397 014c 9C       		.byte	0x9c
 398 014d 0A       		.uleb128 0xa
 399 014e D0010000 		.4byte	.LASF24
 400 0152 01       		.byte	0x1
 401 0153 C6       		.byte	0xc6
 402 0154 6B000000 		.4byte	0x6b
 403 0158 00000000 		.4byte	.LFB4
 404 015c 0C000000 		.4byte	.LFE4-.LFB4
 405 0160 01       		.uleb128 0x1
 406 0161 9C       		.byte	0x9c
 407 0162 00       		.byte	0
 408              		.section	.debug_abbrev,"",%progbits
 409              	.Ldebug_abbrev0:
 410 0000 01       		.uleb128 0x1
 411 0001 11       		.uleb128 0x11
 412 0002 01       		.byte	0x1
 413 0003 25       		.uleb128 0x25
 414 0004 0E       		.uleb128 0xe
 415 0005 13       		.uleb128 0x13
 416 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 12


 417 0007 03       		.uleb128 0x3
 418 0008 0E       		.uleb128 0xe
 419 0009 1B       		.uleb128 0x1b
 420 000a 0E       		.uleb128 0xe
 421 000b 55       		.uleb128 0x55
 422 000c 17       		.uleb128 0x17
 423 000d 11       		.uleb128 0x11
 424 000e 01       		.uleb128 0x1
 425 000f 10       		.uleb128 0x10
 426 0010 17       		.uleb128 0x17
 427 0011 00       		.byte	0
 428 0012 00       		.byte	0
 429 0013 02       		.uleb128 0x2
 430 0014 24       		.uleb128 0x24
 431 0015 00       		.byte	0
 432 0016 0B       		.uleb128 0xb
 433 0017 0B       		.uleb128 0xb
 434 0018 3E       		.uleb128 0x3e
 435 0019 0B       		.uleb128 0xb
 436 001a 03       		.uleb128 0x3
 437 001b 0E       		.uleb128 0xe
 438 001c 00       		.byte	0
 439 001d 00       		.byte	0
 440 001e 03       		.uleb128 0x3
 441 001f 24       		.uleb128 0x24
 442 0020 00       		.byte	0
 443 0021 0B       		.uleb128 0xb
 444 0022 0B       		.uleb128 0xb
 445 0023 3E       		.uleb128 0x3e
 446 0024 0B       		.uleb128 0xb
 447 0025 03       		.uleb128 0x3
 448 0026 08       		.uleb128 0x8
 449 0027 00       		.byte	0
 450 0028 00       		.byte	0
 451 0029 04       		.uleb128 0x4
 452 002a 16       		.uleb128 0x16
 453 002b 00       		.byte	0
 454 002c 03       		.uleb128 0x3
 455 002d 0E       		.uleb128 0xe
 456 002e 3A       		.uleb128 0x3a
 457 002f 0B       		.uleb128 0xb
 458 0030 3B       		.uleb128 0x3b
 459 0031 05       		.uleb128 0x5
 460 0032 49       		.uleb128 0x49
 461 0033 13       		.uleb128 0x13
 462 0034 00       		.byte	0
 463 0035 00       		.byte	0
 464 0036 05       		.uleb128 0x5
 465 0037 35       		.uleb128 0x35
 466 0038 00       		.byte	0
 467 0039 49       		.uleb128 0x49
 468 003a 13       		.uleb128 0x13
 469 003b 00       		.byte	0
 470 003c 00       		.byte	0
 471 003d 06       		.uleb128 0x6
 472 003e 2E       		.uleb128 0x2e
 473 003f 01       		.byte	0x1
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 13


 474 0040 3F       		.uleb128 0x3f
 475 0041 19       		.uleb128 0x19
 476 0042 03       		.uleb128 0x3
 477 0043 0E       		.uleb128 0xe
 478 0044 3A       		.uleb128 0x3a
 479 0045 0B       		.uleb128 0xb
 480 0046 3B       		.uleb128 0x3b
 481 0047 0B       		.uleb128 0xb
 482 0048 27       		.uleb128 0x27
 483 0049 19       		.uleb128 0x19
 484 004a 11       		.uleb128 0x11
 485 004b 01       		.uleb128 0x1
 486 004c 12       		.uleb128 0x12
 487 004d 06       		.uleb128 0x6
 488 004e 40       		.uleb128 0x40
 489 004f 18       		.uleb128 0x18
 490 0050 9742     		.uleb128 0x2117
 491 0052 19       		.uleb128 0x19
 492 0053 01       		.uleb128 0x1
 493 0054 13       		.uleb128 0x13
 494 0055 00       		.byte	0
 495 0056 00       		.byte	0
 496 0057 07       		.uleb128 0x7
 497 0058 05       		.uleb128 0x5
 498 0059 00       		.byte	0
 499 005a 03       		.uleb128 0x3
 500 005b 0E       		.uleb128 0xe
 501 005c 3A       		.uleb128 0x3a
 502 005d 0B       		.uleb128 0xb
 503 005e 3B       		.uleb128 0x3b
 504 005f 0B       		.uleb128 0xb
 505 0060 49       		.uleb128 0x49
 506 0061 13       		.uleb128 0x13
 507 0062 02       		.uleb128 0x2
 508 0063 18       		.uleb128 0x18
 509 0064 00       		.byte	0
 510 0065 00       		.byte	0
 511 0066 08       		.uleb128 0x8
 512 0067 2E       		.uleb128 0x2e
 513 0068 00       		.byte	0
 514 0069 3F       		.uleb128 0x3f
 515 006a 19       		.uleb128 0x19
 516 006b 03       		.uleb128 0x3
 517 006c 0E       		.uleb128 0xe
 518 006d 3A       		.uleb128 0x3a
 519 006e 0B       		.uleb128 0xb
 520 006f 3B       		.uleb128 0x3b
 521 0070 0B       		.uleb128 0xb
 522 0071 27       		.uleb128 0x27
 523 0072 19       		.uleb128 0x19
 524 0073 11       		.uleb128 0x11
 525 0074 01       		.uleb128 0x1
 526 0075 12       		.uleb128 0x12
 527 0076 06       		.uleb128 0x6
 528 0077 40       		.uleb128 0x40
 529 0078 18       		.uleb128 0x18
 530 0079 9742     		.uleb128 0x2117
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 14


 531 007b 19       		.uleb128 0x19
 532 007c 00       		.byte	0
 533 007d 00       		.byte	0
 534 007e 09       		.uleb128 0x9
 535 007f 34       		.uleb128 0x34
 536 0080 00       		.byte	0
 537 0081 03       		.uleb128 0x3
 538 0082 0E       		.uleb128 0xe
 539 0083 3A       		.uleb128 0x3a
 540 0084 0B       		.uleb128 0xb
 541 0085 3B       		.uleb128 0x3b
 542 0086 0B       		.uleb128 0xb
 543 0087 49       		.uleb128 0x49
 544 0088 13       		.uleb128 0x13
 545 0089 02       		.uleb128 0x2
 546 008a 18       		.uleb128 0x18
 547 008b 00       		.byte	0
 548 008c 00       		.byte	0
 549 008d 0A       		.uleb128 0xa
 550 008e 2E       		.uleb128 0x2e
 551 008f 00       		.byte	0
 552 0090 3F       		.uleb128 0x3f
 553 0091 19       		.uleb128 0x19
 554 0092 03       		.uleb128 0x3
 555 0093 0E       		.uleb128 0xe
 556 0094 3A       		.uleb128 0x3a
 557 0095 0B       		.uleb128 0xb
 558 0096 3B       		.uleb128 0x3b
 559 0097 0B       		.uleb128 0xb
 560 0098 27       		.uleb128 0x27
 561 0099 19       		.uleb128 0x19
 562 009a 49       		.uleb128 0x49
 563 009b 13       		.uleb128 0x13
 564 009c 11       		.uleb128 0x11
 565 009d 01       		.uleb128 0x1
 566 009e 12       		.uleb128 0x12
 567 009f 06       		.uleb128 0x6
 568 00a0 40       		.uleb128 0x40
 569 00a1 18       		.uleb128 0x18
 570 00a2 9742     		.uleb128 0x2117
 571 00a4 19       		.uleb128 0x19
 572 00a5 00       		.byte	0
 573 00a6 00       		.byte	0
 574 00a7 00       		.byte	0
 575              		.section	.debug_aranges,"",%progbits
 576 0000 3C000000 		.4byte	0x3c
 577 0004 0200     		.2byte	0x2
 578 0006 00000000 		.4byte	.Ldebug_info0
 579 000a 04       		.byte	0x4
 580 000b 00       		.byte	0
 581 000c 0000     		.2byte	0
 582 000e 0000     		.2byte	0
 583 0010 00000000 		.4byte	.LFB0
 584 0014 2C000000 		.4byte	.LFE0-.LFB0
 585 0018 00000000 		.4byte	.LFB1
 586 001c 20000000 		.4byte	.LFE1-.LFB1
 587 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 15


 588 0024 44000000 		.4byte	.LFE2-.LFB2
 589 0028 00000000 		.4byte	.LFB3
 590 002c 18000000 		.4byte	.LFE3-.LFB3
 591 0030 00000000 		.4byte	.LFB4
 592 0034 0C000000 		.4byte	.LFE4-.LFB4
 593 0038 00000000 		.4byte	0
 594 003c 00000000 		.4byte	0
 595              		.section	.debug_ranges,"",%progbits
 596              	.Ldebug_ranges0:
 597 0000 00000000 		.4byte	.LFB0
 598 0004 2C000000 		.4byte	.LFE0
 599 0008 00000000 		.4byte	.LFB1
 600 000c 20000000 		.4byte	.LFE1
 601 0010 00000000 		.4byte	.LFB2
 602 0014 44000000 		.4byte	.LFE2
 603 0018 00000000 		.4byte	.LFB3
 604 001c 18000000 		.4byte	.LFE3
 605 0020 00000000 		.4byte	.LFB4
 606 0024 0C000000 		.4byte	.LFE4
 607 0028 00000000 		.4byte	0
 608 002c 00000000 		.4byte	0
 609              		.section	.debug_line,"",%progbits
 610              	.Ldebug_line0:
 611 0000 DD000000 		.section	.debug_str,"MS",%progbits,1
 611      02006100 
 611      00000201 
 611      FB0E0D00 
 611      01010101 
 612              	.LASF14:
 613 0000 63686172 		.ascii	"char\000"
 613      00
 614              	.LASF21:
 615 0005 6D61736B 		.ascii	"maskVal\000"
 615      56616C00 
 616              	.LASF23:
 617 000d 74696D65 		.ascii	"timer_clock_GetDividerRegister\000"
 617      725F636C 
 617      6F636B5F 
 617      47657444 
 617      69766964 
 618              	.LASF12:
 619 002c 666C6F61 		.ascii	"float\000"
 619      7400
 620              	.LASF17:
 621 0032 74696D65 		.ascii	"timer_clock_SetFractionalDividerRegister\000"
 621      725F636C 
 621      6F636B5F 
 621      53657446 
 621      72616374 
 622              	.LASF1:
 623 005b 756E7369 		.ascii	"unsigned char\000"
 623      676E6564 
 623      20636861 
 623      7200
 624              	.LASF15:
 625 0069 72656733 		.ascii	"reg32\000"
 625      3200
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 16


 626              	.LASF5:
 627 006f 6C6F6E67 		.ascii	"long unsigned int\000"
 627      20756E73 
 627      69676E65 
 627      6420696E 
 627      7400
 628              	.LASF3:
 629 0081 73686F72 		.ascii	"short unsigned int\000"
 629      7420756E 
 629      7369676E 
 629      65642069 
 629      6E7400
 630              	.LASF19:
 631 0094 636C6B44 		.ascii	"clkDivider\000"
 631      69766964 
 631      657200
 632              	.LASF13:
 633 009f 646F7562 		.ascii	"double\000"
 633      6C6500
 634              	.LASF22:
 635 00a6 72656756 		.ascii	"regVal\000"
 635      616C00
 636              	.LASF18:
 637 00ad 616C6967 		.ascii	"alignClkDiv\000"
 637      6E436C6B 
 637      44697600 
 638              	.LASF20:
 639 00b9 636C6B46 		.ascii	"clkFractional\000"
 639      72616374 
 639      696F6E61 
 639      6C00
 640              	.LASF25:
 641 00c7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 641      4320342E 
 641      392E3320 
 641      32303135 
 641      30333033 
 642 00fa 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 642      20726576 
 642      6973696F 
 642      6E203232 
 642      31323230 
 643 012d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 643      66756E63 
 643      74696F6E 
 643      2D736563 
 643      74696F6E 
 644              	.LASF10:
 645 0155 75696E74 		.ascii	"uint16\000"
 645      313600
 646              	.LASF11:
 647 015c 75696E74 		.ascii	"uint32\000"
 647      333200
 648              	.LASF8:
 649 0163 756E7369 		.ascii	"unsigned int\000"
 649      676E6564 
 649      20696E74 
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 17


 649      00
 650              	.LASF7:
 651 0170 6C6F6E67 		.ascii	"long long unsigned int\000"
 651      206C6F6E 
 651      6720756E 
 651      7369676E 
 651      65642069 
 652              	.LASF6:
 653 0187 6C6F6E67 		.ascii	"long long int\000"
 653      206C6F6E 
 653      6720696E 
 653      7400
 654              	.LASF16:
 655 0195 74696D65 		.ascii	"timer_clock_StartEx\000"
 655      725F636C 
 655      6F636B5F 
 655      53746172 
 655      74457800 
 656              	.LASF26:
 657 01a9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\timer_clock.c\000"
 657      6E657261 
 657      7465645F 
 657      536F7572 
 657      63655C50 
 658              	.LASF24:
 659 01d0 74696D65 		.ascii	"timer_clock_GetFractionalDividerRegister\000"
 659      725F636C 
 659      6F636B5F 
 659      47657446 
 659      72616374 
 660              	.LASF2:
 661 01f9 73686F72 		.ascii	"short int\000"
 661      7420696E 
 661      7400
 662              	.LASF9:
 663 0203 75696E74 		.ascii	"uint8\000"
 663      3800
 664              	.LASF4:
 665 0209 6C6F6E67 		.ascii	"long int\000"
 665      20696E74 
 665      00
 666              	.LASF27:
 667 0212 443A5C49 		.ascii	"D:\\IoT\\ProximityEvents\\Cypress PSoC\\BLE_Proximi"
 667      6F545C50 
 667      726F7869 
 667      6D697479 
 667      4576656E 
 668 0241 74793032 		.ascii	"ty02\\BLE_Proximity01.cydsn\000"
 668      5C424C45 
 668      5F50726F 
 668      78696D69 
 668      74793031 
 669              	.LASF0:
 670 025c 7369676E 		.ascii	"signed char\000"
 670      65642063 
 670      68617200 
 671              	.LASF28:
ARM GAS  C:\Users\mohammed\AppData\Local\Temp\ccftPxar.s 			page 18


 672 0268 74696D65 		.ascii	"timer_clock_Stop\000"
 672      725F636C 
 672      6F636B5F 
 672      53746F70 
 672      00
 673              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
